{"version":3,"sources":["_components/EditorArea.jsx","App.js","reportWebVitals.js","index.js"],"names":["EditorArea","props","useState","EditorState","createEmpty","editorState","setEditorState","test","testTest","className","onClick","console","log","wrapperClassName","editorClassName","toolbarClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","toolbar","options","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAQO,SAASA,EAAWC,GACzB,MAAsCC,oBACpC,kBAAMC,cAAYC,iBADpB,mBAAOC,EAAP,KAAoBC,EAApB,KAGE,EAAyBJ,qBAAzB,mBAAOK,EAAP,KAAaC,EAAb,KAaF,OACE,sBAAKC,UAAU,yBAAf,UACE,wBAAQC,QAAS,WACfC,QAAQC,IAAIL,IADd,8CAGA,cAAC,SAAD,CACEF,YAAaA,EACbQ,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBC,oBApBsB,SAACX,GAK3BC,EAAeD,GAEfG,EAASS,IAAYC,uBAAab,EAAYc,wBAc1CC,QAAS,CAACC,QAAS,CACjB,SACA,YACA,WACA,aACA,OACA,YACA,cACA,OACA,WACA,QACA,SACA,iBCpCKC,MATf,WACE,OACE,qBAAKb,UAAU,MAAf,SAEE,cAACT,EAAD,OCKSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.56db9e33.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {EditorState, convertToRaw, ContentState} from \"draft-js\";\r\nimport {Editor} from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nexport function EditorArea(props) {\r\n  const [editorState, setEditorState] = useState(\r\n    () => EditorState.createEmpty(),\r\n  );\r\n    const [test, testTest] = useState();\r\n\r\n  /* De array UTF-8 a DOMString y viceversa */\r\n  const onEditorStateChange = (editorState) => {\r\n    /* props.handleInputChange({target: {\r\n      name: props.name, value: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    }});*/\r\n\r\n    setEditorState(editorState);\r\n\r\n    testTest(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper_editor_textual\">\r\n      <button onClick={()=>{\r\n        console.log(test);\r\n      }}>mostrar texto html en la consola</button>\r\n      <Editor\r\n        editorState={editorState}\r\n        wrapperClassName=\"wrapper-class\"\r\n        editorClassName=\"editor-class\"\r\n        toolbarClassName=\"toolbar-class\"\r\n        onEditorStateChange={onEditorStateChange}\r\n        toolbar={{options: [\r\n          \"inline\",\r\n          \"blockType\",\r\n          \"fontSize\",\r\n          \"fontFamily\",\r\n          \"list\",\r\n          \"textAlign\",\r\n          \"colorPicker\",\r\n          \"link\",\r\n          \"embedded\",\r\n          \"image\",\r\n          \"remove\",\r\n          \"history\",\r\n        ]}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport {EditorArea} from \"./_components/EditorArea\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <EditorArea/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}